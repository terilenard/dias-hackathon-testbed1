/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: proto/logging.proto */

#ifndef PROTOBUF_C_proto_2flogging_2eproto__INCLUDED
#define PROTOBUF_C_proto_2flogging_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Dias__LogMessage Dias__LogMessage;


/* --- enums --- */

typedef enum _Dias__LogMessage__Priority {
  DIAS__LOG_MESSAGE__PRIORITY__HIGH = 0,
  DIAS__LOG_MESSAGE__PRIORITY__MEDIUM = 1,
  DIAS__LOG_MESSAGE__PRIORITY__LOW = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DIAS__LOG_MESSAGE__PRIORITY)
} Dias__LogMessage__Priority;
typedef enum _Dias__LogMessage__Level {
  DIAS__LOG_MESSAGE__LEVEL__CRITICAL = 0,
  DIAS__LOG_MESSAGE__LEVEL__ERROR = 1,
  DIAS__LOG_MESSAGE__LEVEL__WARNING = 3,
  DIAS__LOG_MESSAGE__LEVEL__INFO = 4,
  DIAS__LOG_MESSAGE__LEVEL__DEBUG = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DIAS__LOG_MESSAGE__LEVEL)
} Dias__LogMessage__Level;

/* --- messages --- */

/*
 * Request to log a message
 */
struct  _Dias__LogMessage
{
  ProtobufCMessage base;
  /*
   * optional Priority priority = 2 [default = LOW];
   * optional Level level = 3 [default = INFO];
   */
  char *message;
};
#define DIAS__LOG_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dias__log_message__descriptor) \
    , NULL }


/* Dias__LogMessage methods */
void   dias__log_message__init
                     (Dias__LogMessage         *message);
size_t dias__log_message__get_packed_size
                     (const Dias__LogMessage   *message);
size_t dias__log_message__pack
                     (const Dias__LogMessage   *message,
                      uint8_t             *out);
size_t dias__log_message__pack_to_buffer
                     (const Dias__LogMessage   *message,
                      ProtobufCBuffer     *buffer);
Dias__LogMessage *
       dias__log_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dias__log_message__free_unpacked
                     (Dias__LogMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Dias__LogMessage_Closure)
                 (const Dias__LogMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor dias__log_message__descriptor;
extern const ProtobufCEnumDescriptor    dias__log_message__priority__descriptor;
extern const ProtobufCEnumDescriptor    dias__log_message__level__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_proto_2flogging_2eproto__INCLUDED */
